# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        current1 = list1
        current2 = list2

        if not list1: return list2 
        if not list2: return list1 
        curList1Value = list1.val
        curList2Value = list2.val

        if curList1Value <= curList2Value:
            tempHead = current1
            current1 = current1.next
        else:
            tempHead = current2
            current2 = current2.next
        resultHead = tempHead
        while tempHead:
            if current1 and current2:
                if current1.val < current2.val:
                    tempHead.next = current1
                    current1 = current1.next
                else:
                    tempHead.next = current2
                    current2 = current2.next
            elif current1:
                tempHead.next = current1
                if current1: 
                    current1 = current1.next
                else:
                    current1 = None
            else:
                tempHead.next = current2
                if current2:
                    current2 = current2.next
                else:
                    current2 = None
            
            tempHead = tempHead.next
        return resultHead
